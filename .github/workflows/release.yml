name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            ext: ''
          - os: linux
            arch: arm64
            ext: ''
          - os: darwin
            arch: amd64
            ext: ''
          - os: darwin
            arch: arm64
            ext: ''


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          echo "Building for ${{ matrix.os }}-${{ matrix.arch }}"
          go build -ldflags="-s -w" -o caddy-manager${{ matrix.ext }} .
          echo "Creating archive for ${{ matrix.os }}-${{ matrix.arch }}"
          tar -czf caddy-manager-${{ matrix.os }}-${{ matrix.arch }}.tar.gz caddy-manager${{ matrix.ext }} README.md env.example SUDO_SETUP.md Makefile.release
          zip caddy-manager-${{ matrix.os }}-${{ matrix.arch }}.zip caddy-manager${{ matrix.ext }} README.md env.example SUDO_SETUP.md Makefile.release
          ls -la *.tar.gz *.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: caddy-manager-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            caddy-manager-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            caddy-manager-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: |
          find . -name "*.tar.gz" -o -name "*.zip" | sort

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Caddy Manager v1.0.0
            
            Web application for managing Caddyfile with a beautiful Tabler UI interface.
            
            ### Supported Platforms
            - Linux AMD64
            - Linux ARM64  
            - macOS AMD64
            - macOS ARM64
            
            ### Installation
            1. Download the appropriate package for your platform
            2. Extract the archive
            3. Make executable: `chmod +x caddy-manager`
            4. Configure environment: `cp env.example .env`
            5. Run: `./caddy-manager`
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-manager-linux-amd64/caddy-manager-linux-amd64.tar.gz
          asset_name: caddy-manager-linux-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-manager-linux-arm64/caddy-manager-linux-arm64.tar.gz
          asset_name: caddy-manager-linux-arm64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-manager-darwin-amd64/caddy-manager-darwin-amd64.tar.gz
          asset_name: caddy-manager-darwin-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./caddy-manager-darwin-arm64/caddy-manager-darwin-arm64.tar.gz
          asset_name: caddy-manager-darwin-arm64.tar.gz
          asset_content_type: application/gzip 